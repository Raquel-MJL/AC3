1. Clase
Es un molde o plantilla que define las propiedades (atributos) y comportamientos (métodos) de los objetos. 
Es una abstracción de un conjunto de objetos similares.
Ejemplo: Una clase Coche podría tener atributos como color, modelo, marca, y métodos como acelerar(), frenar().


2. Objeto
Es una instancia de una clase. Un objeto tiene los atributos definidos en la clase y puede ejecutar sus métodos.
Ejemplo: Un objeto podría ser un coche específico creado a partir de la clase Coche.


3. Atributos
Son las características o propiedades de un objeto. Se definen dentro de la clase y describen el estado del objeto.
Ejemplo: En la clase Coche, los atributos podrían ser color, marca, modelo, etc.


4. Métodos
Son las acciones o comportamientos que un objeto puede realizar. Los métodos están definidos dentro de la clase.
Ejemplo: En la clase Coche, los métodos podrían ser arrancar(), detener(), acelerar().


5. Encapsulamiento
Es el principio de ocultar la implementación interna de un objeto y exponer solo lo necesario. Esto se logra utilizando modificadores de acceso como public, private y protected.
Ejemplo: Un objeto Coche puede tener un atributo velocidad privado, pero se puede acceder a él mediante un método público getVelocidad().


6. Herencia
Permite que una clase herede atributos y métodos de otra clase. Esto promueve la reutilización de código y la creación de jerarquías de clases.
Ejemplo: Una clase CocheDeportivo puede heredar de la clase Coche y añadir características específicas sin tener que redefinir toda la funcionalidad básica.


7. Polimorfismo
Es la capacidad de un objeto para tomar muchas formas. Esto significa que el mismo método puede tener diferentes comportamientos según el contexto o el tipo de objeto que lo invoque.
Ejemplo: Si tenemos un método mover() en las clases Coche y Bicicleta, ambas clases pueden implementar este método de manera diferente, pero con el mismo nombre.


8. Abstracción
Consiste en ocultar los detalles complejos y mostrar solo la información esencial. Se utiliza para simplificar el diseño y manejo de objetos.
Ejemplo: Una interfaz Vehiculo podría definir los métodos mover() y detener(), sin especificar cómo exactamente estos métodos son implementados en clases como Coche o Bicicleta.